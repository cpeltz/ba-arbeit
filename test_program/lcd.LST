C51 COMPILER V8.09   LCD                                                                   07/20/2009 13:39:03 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c LARGE BROWSE INTVECTOR(0X2000) DEFINE(MONITOR51) DEBUG OBJECTEXTEND

line level    source

   1          #include "lcd.h"
   2          #include "timing.h"
   3          
   4          /**
   5           * Pointer für den Memory-Mapped-IO Zugriff auf das LCD:
   6           * WR_COM_REG: write command
   7           * WR_DAT_REG: write data
   8           * RD_COM_REG: read command
   9           * RD_DAT_REG: read data
  10           */
  11          byte xdata *WR_COM_REG = WR_COM_REG_;
  12          byte xdata *WR_DAT_REG = WR_DAT_REG_;
  13          byte xdata *RD_COM_REG = RD_COM_REG_;
  14          byte xdata *RD_DAT_REG = RD_DAT_REG_;
  15          
  16          /**
  17           * Gibt zurueck, ob das Display bereit ist, einen Command
  18           * entgegenzunehmen.
  19           */
  20          byte lcd_busy() {
  21   1              return 0x80 & *(RD_COM_REG);
  22   1      }
  23          
  24          /**
  25           * Blockiert, bis das Display ein Kommando annehmen kann.
  26           */
  27          void lcd_comm_wait() {
  28   1              while (lcd_busy());
  29   1      }
  30          
  31          /**
  32           * Sendet ein Kommando ans LCD und blockiert dabei solange, bis
  33           * das LCD diesen annehmen kann.
  34           * Parameter:
  35           *  - command: Das Kommando
  36           */
  37          void lcd_command(byte command) {
  38   1              lcd_comm_wait();
  39   1              *(WR_COM_REG) = command;
  40   1      }
  41          
  42          /**
  43           * Sendet ein Zeichen ans LCD und blockiert dazu solange wie nötig,
  44           * siehe lcd_command(byte).
  45           * Parameter
  46           *  - c: Das Zeichen (ASCII)
  47           */
  48          void lcd_data(unsigned char c) {
  49   1              lcd_comm_wait();
  50   1              *(WR_DAT_REG) = c;
  51   1      }
  52          
  53          /**
  54           * Initialisiert das Display wie im Datenblatt beschrieben (8-Bit).
  55           */
C51 COMPILER V8.09   LCD                                                                   07/20/2009 13:39:03 PAGE 2   

  56          void lcd_init() {
  57   1              wait_ms(16);
  58   1              *(WR_COM_REG) = 0x30;
  59   1              wait_ms(5);
  60   1              *(WR_COM_REG) = 0x30;
  61   1              wait_100us(2);
  62   1              *(WR_COM_REG) = 0x30;
  63   1              wait_ms(5);
  64   1              
  65   1              lcd_command(0x38);
  66   1              lcd_command(0x0c);
  67   1              lcd_command(0x01);
  68   1              lcd_command(0x06);
  69   1      }
  70          
  71          /**
  72           * Löscht den Inhalt des LCD und setzt den Cursor auf Position 0.
  73           */
  74          void lcd_clear() {
  75   1              lcd_command(0x01);
  76   1      }
  77          
  78          /**
  79           * lcd_set_cursor_pos(l, c) setzt den Cursor des Displays in Zeile l
  80           * und Spalte c.
  81           * Parameter:
  82           *  - line: Die Zeile (0-3)
  83           *  - col: Die Spalte (0-19)
  84           */
  85          /*void lcd_set_cursor_pos(unsigned char line,unsigned char col) {
  86                  unsigned char addr;
  87                  if(col >= 20) col = 19;
  88                  switch(line) {
  89                  default:
  90                  case 0:
  91                          addr = 0x00;
  92                          break;
  93                  case 1:
  94                          addr = 0x40;
  95                          break;
  96                  case 2:
  97                          addr = 0x14;
  98                          break;
  99                  case 3:
 100                          addr = 0x54;
 101                          break;
 102                  }
 103                  addr += col;
 104                  lcd_command(addr | 0x80);
 105          }*/
 106          
 107          /**
 108           * Schreibt den gegebenen Text an die aktuelle Cursor-Position.
 109           * Parameter:
 110           *  - buf: Der Text
 111           */
 112          /*void lcd_write_text(char* buf) {
 113                  while(*buf) {
 114                          lcd_data(*buf);
 115                          buf++;
 116                  }
 117          }*/
C51 COMPILER V8.09   LCD                                                                   07/20/2009 13:39:03 PAGE 3   

 118          
 119          /**
 120           * Löscht das Display und schreibt den gegebenen Text ab Position 0.
 121           * Parameter:
 122           *  - buffer: Der Text
 123           */
 124          void lcd_print_string(char *buffer) {
 125   1              char *cur = buffer;
 126   1              lcd_clear();
 127   1              while (*cur) {
 128   2                      lcd_data(*cur);
 129   2                      cur++;
 130   2                      switch (cur - buffer) {
 131   3                      case 20:
 132   3                              lcd_command(0x40 | 0x80); // Jump to 0x40
 133   3                              break;
 134   3                      case 40:
 135   3                              lcd_command(0x14 | 0x80); // Jump to 0x10
 136   3                              break;
 137   3                      case 60:
 138   3                              lcd_command(0x54 | 0x80); // Jump to 0x50
 139   3                              break;
 140   3                      }
 141   2              }
 142   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    261    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
