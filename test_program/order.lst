C51 COMPILER V8.09   ORDER                                                                 07/27/2009 14:58:14 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE ORDER
OBJECT MODULE PLACED IN order.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE motor_platine\order.c LARGE BROWSE INTVECTOR(0X2000) DEFINE(MONITOR51) DEBU
                    -G OBJECTEXTEND PRINT(.\order.lst) OBJECT(order.obj)

line level    source

   1          #include "order.h"
   2          #include "../i2c_master.h"
   3          #include <string.h>
   4          #include <stdarg.h>
   5          
   6          void order_init(order_t *order) {
   7   1              // Function to Initialize a order_t structure
   8   1              unsigned char i = 0;
   9   1              // Overwrite every piece of memory with 0
  10   1              // Have to do it that way because no memset available
  11   1              for(; i < ORDER_TYPE_MAX_LENGTH; i++) {
  12   2                      order->dat[i] = 0;
  13   2              }
  14   1              // Set the position to write to
  15   1              order->dat[0] = TWI_ADDRESS;
  16   1              order->pos = 1;
  17   1      }
  18          
  19          unsigned char order_send(order_t *order) {
  20   1              return i2c_send(order->dat, order->pos);
  21   1      }
  22          
  23          unsigned char order_send_and_recv_co(order_t *order) {
  24   1              order_send(order);
  25   1              order_init(order);
  26   1              i2c_receive(order->dat, 2);
  27   1              return i2c_receive(order->dat, order->dat[1]);
  28   1      }
  29          
  30          unsigned char bytes_to_recv(order_t *order) {
  31   1              switch(order->dat[0]) {
  32   2                      case ORDER_REGISTER_LEFT_SPEED:
  33   2                      case ORDER_REGISTER_RIGHT_SPEED:
  34   2                      case ORDER_REGISTER_QUEUE_SIZE:
  35   2                              return 1;
  36   2                      default:
  37   2                              return 0;
  38   2              }
  39   1      }
  40          
  41          unsigned char order_send_and_recv(order_t *order) {
  42   1              if (order->dat[1] == 0x42) // for recv a current order one needs the other function.
  43   1                      return;
*** WARNING C173 IN LINE 43 OF MOTOR_PLATINE\ORDER.C: missing return-expression
  44   1              i2c_send(order->dat, order->pos + 1);
  45   1              order_init(order);
  46   1              return i2c_receive(order->dat, bytes_to_recv(order) + 1);
  47   1      }
  48          
  49          void order_set_type(order_t *order, unsigned char type) {
  50   1              order->dat[1] = type;
  51   1              order->pos = 2;
  52   1      }
  53          
C51 COMPILER V8.09   ORDER                                                                 07/27/2009 14:58:14 PAGE 2   

  54          void order_add_params(order_t *order, char *format, ...) {
  55   1              int num = strlen(format);
  56   1              va_list arglist;
  57   1              int i = 0;
  58   1      
  59   1              va_start(arglist, format);
  60   1              for(; i < num; i++) {
  61   2                      if(format[i] == '1') {
  62   3                              order->dat[order->pos] = va_arg(arglist, unsigned char);
  63   3                              order->pos += 1;
  64   3                      } else if(format[i] == '2') {
  65   3                              unsigned int arg = va_arg(arglist, unsigned int);
  66   3                              order->dat[order->pos] = arg >> 8;
  67   3                              order->dat[order->pos + 1] = arg & 0x00ff;
  68   3                              order->pos += 2;
  69   3                      }
  70   2              }
  71   1              va_end(arglist);
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    604    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      67
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
